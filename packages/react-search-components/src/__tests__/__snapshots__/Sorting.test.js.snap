// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly when there is a value 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Sorting
    onChange={[Function]}
    options={
      Array [
        Object {
          "name": "Name ASC",
          "value": "name|||asc",
        },
        Object {
          "name": "Name DESC",
          "value": "name|||desc",
        },
      ]
    }
    value="name|||desc"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <select
        id="sorting"
        name="sorting"
        onChange={[Function]}
        value="name|||desc"
      >
        <option
          value="name|||asc"
        >
          Name ASC
        </option>
        <option
          value="name|||desc"
        >
          Name DESC
        </option>
      </select>,
      "className": "sorting",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <option
            value="name|||asc"
          >
            Name ASC
          </option>,
          <option
            value="name|||desc"
          >
            Name DESC
          </option>,
        ],
        "id": "sorting",
        "name": "sorting",
        "onChange": [Function],
        "value": "name|||desc",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "name|||asc",
          "nodeType": "host",
          "props": Object {
            "children": "Name ASC",
            "value": "name|||asc",
          },
          "ref": null,
          "rendered": "Name ASC",
          "type": "option",
        },
        Object {
          "instance": null,
          "key": "name|||desc",
          "nodeType": "host",
          "props": Object {
            "children": "Name DESC",
            "value": "name|||desc",
          },
          "ref": null,
          "rendered": "Name DESC",
          "type": "option",
        },
      ],
      "type": "select",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <select
          id="sorting"
          name="sorting"
          onChange={[Function]}
          value="name|||desc"
        >
          <option
            value="name|||asc"
          >
            Name ASC
          </option>
          <option
            value="name|||desc"
          >
            Name DESC
          </option>
        </select>,
        "className": "sorting",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <option
              value="name|||asc"
            >
              Name ASC
            </option>,
            <option
              value="name|||desc"
            >
              Name DESC
            </option>,
          ],
          "id": "sorting",
          "name": "sorting",
          "onChange": [Function],
          "value": "name|||desc",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": "name|||asc",
            "nodeType": "host",
            "props": Object {
              "children": "Name ASC",
              "value": "name|||asc",
            },
            "ref": null,
            "rendered": "Name ASC",
            "type": "option",
          },
          Object {
            "instance": null,
            "key": "name|||desc",
            "nodeType": "host",
            "props": Object {
              "children": "Name DESC",
              "value": "name|||desc",
            },
            "ref": null,
            "rendered": "Name DESC",
            "type": "option",
          },
        ],
        "type": "select",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`renders correctly when there is not a value 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Sorting
    onChange={[Function]}
    options={
      Array [
        Object {
          "name": "Name ASC",
          "value": "name|||asc",
        },
        Object {
          "name": "Name DESC",
          "value": "name|||desc",
        },
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <select
        id="sorting"
        name="sorting"
        onChange={[Function]}
      >
        <option
          value="name|||asc"
        >
          Name ASC
        </option>
        <option
          value="name|||desc"
        >
          Name DESC
        </option>
      </select>,
      "className": "sorting",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <option
            value="name|||asc"
          >
            Name ASC
          </option>,
          <option
            value="name|||desc"
          >
            Name DESC
          </option>,
        ],
        "id": "sorting",
        "name": "sorting",
        "onChange": [Function],
        "value": undefined,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "name|||asc",
          "nodeType": "host",
          "props": Object {
            "children": "Name ASC",
            "value": "name|||asc",
          },
          "ref": null,
          "rendered": "Name ASC",
          "type": "option",
        },
        Object {
          "instance": null,
          "key": "name|||desc",
          "nodeType": "host",
          "props": Object {
            "children": "Name DESC",
            "value": "name|||desc",
          },
          "ref": null,
          "rendered": "Name DESC",
          "type": "option",
        },
      ],
      "type": "select",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <select
          id="sorting"
          name="sorting"
          onChange={[Function]}
        >
          <option
            value="name|||asc"
          >
            Name ASC
          </option>
          <option
            value="name|||desc"
          >
            Name DESC
          </option>
        </select>,
        "className": "sorting",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <option
              value="name|||asc"
            >
              Name ASC
            </option>,
            <option
              value="name|||desc"
            >
              Name DESC
            </option>,
          ],
          "id": "sorting",
          "name": "sorting",
          "onChange": [Function],
          "value": undefined,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": "name|||asc",
            "nodeType": "host",
            "props": Object {
              "children": "Name ASC",
              "value": "name|||asc",
            },
            "ref": null,
            "rendered": "Name ASC",
            "type": "option",
          },
          Object {
            "instance": null,
            "key": "name|||desc",
            "nodeType": "host",
            "props": Object {
              "children": "Name DESC",
              "value": "name|||desc",
            },
            "ref": null,
            "rendered": "Name DESC",
            "type": "option",
          },
        ],
        "type": "select",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
