// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SingleRangeSelectFacet
    label="A Facet"
    onChange={[MockFunction]}
    options={
      Array [
        Object {
          "count": 20,
          "from": 1,
          "name": "Range 1",
          "to": 10,
        },
        Object {
          "count": 10,
          "from": 11,
          "name": "Range 2",
          "to": 20,
        },
      ]
    }
    values={
      Array [
        Object {
          "from": 1,
          "to": 10,
        },
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="eco-search-facet-label"
        >
          A Facet
        </div>,
        <StateManager
          className="eco-search-select-container"
          classNamePrefix="eco-search-select"
          components={
            Object {
              "Option": [Function],
            }
          }
          defaultInputValue=""
          defaultMenuIsOpen={false}
          defaultValue={null}
          isSearchable={false}
          onChange={[Function]}
          options={
            Array [
              Object {
                "count": 20,
                "label": "Range 1",
                "value": "1_10",
              },
              Object {
                "count": 10,
                "label": "Range 2",
                "value": "11_20",
              },
            ]
          }
          value={
            Object {
              "count": 20,
              "label": "Range 1",
              "value": "1_10",
            }
          }
        />,
      ],
      "className": "eco-search-facet",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "A Facet",
          "className": "eco-search-facet-label",
        },
        "ref": null,
        "rendered": "A Facet",
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "className": "eco-search-select-container",
          "classNamePrefix": "eco-search-select",
          "components": Object {
            "Option": [Function],
          },
          "defaultInputValue": "",
          "defaultMenuIsOpen": false,
          "defaultValue": null,
          "isSearchable": false,
          "onChange": [Function],
          "options": Array [
            Object {
              "count": 20,
              "label": "Range 1",
              "value": "1_10",
            },
            Object {
              "count": 10,
              "label": "Range 2",
              "value": "11_20",
            },
          ],
          "value": Object {
            "count": 20,
            "label": "Range 1",
            "value": "1_10",
          },
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="eco-search-facet-label"
          >
            A Facet
          </div>,
          <StateManager
            className="eco-search-select-container"
            classNamePrefix="eco-search-select"
            components={
              Object {
                "Option": [Function],
              }
            }
            defaultInputValue=""
            defaultMenuIsOpen={false}
            defaultValue={null}
            isSearchable={false}
            onChange={[Function]}
            options={
              Array [
                Object {
                  "count": 20,
                  "label": "Range 1",
                  "value": "1_10",
                },
                Object {
                  "count": 10,
                  "label": "Range 2",
                  "value": "11_20",
                },
              ]
            }
            value={
              Object {
                "count": 20,
                "label": "Range 1",
                "value": "1_10",
              }
            }
          />,
        ],
        "className": "eco-search-facet",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "A Facet",
            "className": "eco-search-facet-label",
          },
          "ref": null,
          "rendered": "A Facet",
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "className": "eco-search-select-container",
            "classNamePrefix": "eco-search-select",
            "components": Object {
              "Option": [Function],
            },
            "defaultInputValue": "",
            "defaultMenuIsOpen": false,
            "defaultValue": null,
            "isSearchable": false,
            "onChange": [Function],
            "options": Array [
              Object {
                "count": 20,
                "label": "Range 1",
                "value": "1_10",
              },
              Object {
                "count": 10,
                "label": "Range 2",
                "value": "11_20",
              },
            ],
            "value": Object {
              "count": 20,
              "label": "Range 1",
              "value": "1_10",
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
