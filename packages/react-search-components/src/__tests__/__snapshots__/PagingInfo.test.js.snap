// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <PagingInfo
    end={20}
    searchTerm="grok"
    start={0}
    totalResults={1000}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        "Showing",
        " ",
        <strong>
          0
           - 
          20
        </strong>,
        " ",
        "out of ",
        <strong>
          1000
        </strong>,
        " for: ",
        <em>
          grok
        </em>,
      ],
      "className": "paging-info",
    },
    "ref": null,
    "rendered": Array [
      "Showing",
      " ",
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            0,
            " - ",
            20,
          ],
        },
        "ref": null,
        "rendered": Array [
          0,
          " - ",
          20,
        ],
        "type": "strong",
      },
      " ",
      "out of ",
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": 1000,
        },
        "ref": null,
        "rendered": 1000,
        "type": "strong",
      },
      " for: ",
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "grok",
        },
        "ref": null,
        "rendered": "grok",
        "type": "em",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          "Showing",
          " ",
          <strong>
            0
             - 
            20
          </strong>,
          " ",
          "out of ",
          <strong>
            1000
          </strong>,
          " for: ",
          <em>
            grok
          </em>,
        ],
        "className": "paging-info",
      },
      "ref": null,
      "rendered": Array [
        "Showing",
        " ",
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              0,
              " - ",
              20,
            ],
          },
          "ref": null,
          "rendered": Array [
            0,
            " - ",
            20,
          ],
          "type": "strong",
        },
        " ",
        "out of ",
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": 1000,
          },
          "ref": null,
          "rendered": 1000,
          "type": "strong",
        },
        " for: ",
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "grok",
          },
          "ref": null,
          "rendered": "grok",
          "type": "em",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
