// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <PagingContainer
    current={1}
    resultsPerPage={20}
    setCurrent={[MockFunction]}
    totalResults={100}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <Pagination
        className=""
        current={1}
        defaultCurrent={1}
        defaultPageSize={10}
        hideOnSinglePage={false}
        itemRender={[Function]}
        locale={
          Object {
            "items_per_page": "条/页",
            "jump_to": "跳至",
            "jump_to_confirm": "确定",
            "next_3": "向后 3 页",
            "next_5": "向后 5 页",
            "next_page": "下一页",
            "page": "页",
            "prev_3": "向前 3 页",
            "prev_5": "向前 5 页",
            "prev_page": "上一页",
          }
        }
        onChange={[MockFunction]}
        onShowSizeChange={[Function]}
        pageSize={20}
        prefixCls="rc-pagination"
        selectComponentClass={null}
        selectPrefixCls="rc-select"
        showLessItems={false}
        showPrevNextJumpers={true}
        showQuickJumper={false}
        showSizeChanger={false}
        showTitle={true}
        style={Object {}}
        total={100}
      />,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "className": "",
        "current": 1,
        "defaultCurrent": 1,
        "defaultPageSize": 10,
        "hideOnSinglePage": false,
        "itemRender": [Function],
        "locale": Object {
          "items_per_page": "条/页",
          "jump_to": "跳至",
          "jump_to_confirm": "确定",
          "next_3": "向后 3 页",
          "next_5": "向后 5 页",
          "next_page": "下一页",
          "page": "页",
          "prev_3": "向前 3 页",
          "prev_5": "向前 5 页",
          "prev_page": "上一页",
        },
        "onChange": [MockFunction],
        "onShowSizeChange": [Function],
        "pageSize": 20,
        "prefixCls": "rc-pagination",
        "selectComponentClass": null,
        "selectPrefixCls": "rc-select",
        "showLessItems": false,
        "showPrevNextJumpers": true,
        "showQuickJumper": false,
        "showSizeChanger": false,
        "showTitle": true,
        "style": Object {},
        "total": 100,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <Pagination
          className=""
          current={1}
          defaultCurrent={1}
          defaultPageSize={10}
          hideOnSinglePage={false}
          itemRender={[Function]}
          locale={
            Object {
              "items_per_page": "条/页",
              "jump_to": "跳至",
              "jump_to_confirm": "确定",
              "next_3": "向后 3 页",
              "next_5": "向后 5 页",
              "next_page": "下一页",
              "page": "页",
              "prev_3": "向前 3 页",
              "prev_5": "向前 5 页",
              "prev_page": "上一页",
            }
          }
          onChange={[MockFunction]}
          onShowSizeChange={[Function]}
          pageSize={20}
          prefixCls="rc-pagination"
          selectComponentClass={null}
          selectPrefixCls="rc-select"
          showLessItems={false}
          showPrevNextJumpers={true}
          showQuickJumper={false}
          showSizeChanger={false}
          showTitle={true}
          style={Object {}}
          total={100}
        />,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "className": "",
          "current": 1,
          "defaultCurrent": 1,
          "defaultPageSize": 10,
          "hideOnSinglePage": false,
          "itemRender": [Function],
          "locale": Object {
            "items_per_page": "条/页",
            "jump_to": "跳至",
            "jump_to_confirm": "确定",
            "next_3": "向后 3 页",
            "next_5": "向后 5 页",
            "next_page": "下一页",
            "page": "页",
            "prev_3": "向前 3 页",
            "prev_5": "向前 5 页",
            "prev_page": "上一页",
          },
          "onChange": [MockFunction],
          "onShowSizeChange": [Function],
          "pageSize": 20,
          "prefixCls": "rc-pagination",
          "selectComponentClass": null,
          "selectPrefixCls": "rc-select",
          "showLessItems": false,
          "showPrevNextJumpers": true,
          "showQuickJumper": false,
          "showSizeChanger": false,
          "showTitle": true,
          "style": Object {},
          "total": 100,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`renders empty when there are no results 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <PagingContainer
    current={1}
    resultsPerPage={20}
    setCurrent={[MockFunction]}
    totalResults={0}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): null,
  Symbol(enzyme.__nodes__): Array [
    null,
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
