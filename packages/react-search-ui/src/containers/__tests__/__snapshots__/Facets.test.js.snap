// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <FacetsContainer
    addFilter={[MockFunction]}
    facets={
      Object {
        "another": Array [
          Object {
            "data": Array [
              Object {
                "count": 10,
                "value": "anotherValue",
              },
            ],
            "type": "value",
          },
        ],
        "empty": Array [
          Object {
            "data": Array [],
            "type": "value",
          },
        ],
        "field": Array [
          Object {
            "data": Array [],
            "type": "value",
          },
        ],
      }
    }
    filters={
      Array [
        Object {
          "field": Array [
            "value",
          ],
        },
      ]
    }
    removeFilter={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <Facet
          name="Field"
          onRemove={[Function]}
          onSelect={[Function]}
          options={Array []}
          value="value"
        />,
        <Facet
          name="Another"
          onRemove={[Function]}
          onSelect={[Function]}
          options={
            Array [
              Object {
                "count": 10,
                "value": "anotherValue",
              },
            ]
          }
        />,
        null,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": "field",
        "nodeType": "function",
        "props": Object {
          "name": "Field",
          "onRemove": [Function],
          "onSelect": [Function],
          "options": Array [],
          "value": "value",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": "another",
        "nodeType": "function",
        "props": Object {
          "name": "Another",
          "onRemove": [Function],
          "onSelect": [Function],
          "options": Array [
            Object {
              "count": 10,
              "value": "anotherValue",
            },
          ],
          "value": undefined,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      null,
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <Facet
            name="Field"
            onRemove={[Function]}
            onSelect={[Function]}
            options={Array []}
            value="value"
          />,
          <Facet
            name="Another"
            onRemove={[Function]}
            onSelect={[Function]}
            options={
              Array [
                Object {
                  "count": 10,
                  "value": "anotherValue",
                },
              ]
            }
          />,
          null,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "field",
          "nodeType": "function",
          "props": Object {
            "name": "Field",
            "onRemove": [Function],
            "onSelect": [Function],
            "options": Array [],
            "value": "value",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "another",
          "nodeType": "function",
          "props": Object {
            "name": "Another",
            "onRemove": [Function],
            "onSelect": [Function],
            "options": Array [
              Object {
                "count": 10,
                "value": "anotherValue",
              },
            ],
            "value": undefined,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        null,
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
